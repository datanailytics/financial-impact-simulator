[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "financial-simulator"
version = "1.0.0"
description = "A comprehensive financial analysis and portfolio simulation platform"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.11"
authors = [
    {name = "Your Team Name", email = "team@example.com"}
]
maintainers = [
    {name = "Lead Developer", email = "lead@example.com"}
]
keywords = [
    "finance",
    "portfolio",
    "simulation",
    "monte-carlo",
    "risk-analysis",
    "quantitative-finance",
    "backtesting",
    "asset-allocation"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Framework :: FastAPI",
    "Natural Language :: English"
]

dependencies = [
    # Core dependencies
    "numpy>=1.24.0,<2.0.0",
    "pandas>=2.0.0,<3.0.0",
    "scipy>=1.10.0,<2.0.0",
    "scikit-learn>=1.3.0,<2.0.0",
    
    # Financial libraries
    "yfinance>=0.2.28",
    "pandas-datareader>=0.10.0",
    "pyportfolioopt>=1.5.5",
    "quantlib>=1.30",
    "ta-lib>=0.4.28",
    
    # Visualization
    "matplotlib>=3.7.0,<4.0.0",
    "seaborn>=0.12.0,<1.0.0",
    "plotly>=5.14.0,<6.0.0",
    "dash>=2.10.0,<3.0.0",
    
    # Web framework
    "fastapi>=0.100.0,<1.0.0",
    "uvicorn[standard]>=0.23.0,<1.0.0",
    "pydantic>=2.0.0,<3.0.0",
    "pydantic-settings>=2.0.0,<3.0.0",
    
    # Database
    "sqlalchemy>=2.0.0,<3.0.0",
    "alembic>=1.11.0,<2.0.0",
    "psycopg2-binary>=2.9.0,<3.0.0",
    "redis>=4.5.0,<5.0.0",
    
    # Task queue
    "celery>=5.3.0,<6.0.0",
    "flower>=2.0.0,<3.0.0",
    
    # Data validation and serialization
    "marshmallow>=3.20.0,<4.0.0",
    "python-multipart>=0.0.6",
    
    # Security
    "cryptography>=41.0.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    
    # HTTP clients
    "httpx>=0.24.0,<1.0.0",
    "requests>=2.31.0,<3.0.0",
    "aiohttp>=3.8.0,<4.0.0",
    
    # Utilities
    "python-dotenv>=1.0.0",
    "click>=8.1.0,<9.0.0",
    "rich>=13.4.0,<14.0.0",
    "tqdm>=4.65.0,<5.0.0",
    "pytz>=2023.3",
    "python-dateutil>=2.8.0,<3.0.0",
    
    # Monitoring
    "prometheus-client>=0.17.0,<1.0.0",
    "opentelemetry-api>=1.18.0,<2.0.0",
    "opentelemetry-instrumentation-fastapi>=0.39b0",
    
    # Configuration
    "pyyaml>=6.0.0,<7.0.0",
    "toml>=0.10.2,<1.0.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0,<8.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "pytest-mock>=3.11.0,<4.0.0",
    "pytest-xdist>=3.3.0,<4.0.0",
    "pytest-benchmark>=4.0.0,<5.0.0",
    "pytest-timeout>=2.1.0,<3.0.0",
    "factory-boy>=3.3.0,<4.0.0",
    "faker>=19.0.0,<20.0.0",
    "hypothesis>=6.80.0,<7.0.0",
    
    # Code quality
    "black>=23.7.0,<24.0.0",
    "isort>=5.12.0,<6.0.0",
    "flake8>=6.1.0,<7.0.0",
    "pylint>=2.17.0,<3.0.0",
    "mypy>=1.5.0,<2.0.0",
    "bandit>=1.7.5,<2.0.0",
    "safety>=2.3.0,<3.0.0",
    
    # Documentation
    "sphinx>=7.1.0,<8.0.0",
    "sphinx-rtd-theme>=1.3.0,<2.0.0",
    "sphinxcontrib-openapi>=0.8.0,<1.0.0",
    "myst-parser>=2.0.0,<3.0.0",
    
    # Development tools
    "ipython>=8.14.0,<9.0.0",
    "ipdb>=0.13.13,<1.0.0",
    "jupyter>=1.0.0,<2.0.0",
    "notebook>=7.0.0,<8.0.0",
    "jupyterlab>=4.0.0,<5.0.0",
    
    # Pre-commit
    "pre-commit>=3.3.0,<4.0.0",
    "commitizen>=3.5.0,<4.0.0",
    
    # Type stubs
    "types-requests>=2.31.0",
    "types-PyYAML>=6.0.0",
    "types-python-dateutil>=2.8.0",
    "types-toml>=0.10.0",
    "pandas-stubs>=2.0.0"
]

ml = [
    # Machine Learning
    "tensorflow>=2.13.0,<3.0.0",
    "torch>=2.0.0,<3.0.0",
    "lightgbm>=4.0.0,<5.0.0",
    "xgboost>=1.7.0,<2.0.0",
    "catboost>=1.2.0,<2.0.0",
    
    # ML utilities
    "optuna>=3.2.0,<4.0.0",
    "mlflow>=2.5.0,<3.0.0",
    "wandb>=0.15.0,<1.0.0",
    "shap>=0.42.0,<1.0.0"
]

research = [
    # Research and backtesting
    "zipline-reloaded>=2.4.0",
    "backtrader>=1.9.78",
    "vectorbt>=0.26.0",
    "pyfolio-reloaded>=0.9.5",
    "alphalens-reloaded>=0.4.3"
]

docs = [
    "mkdocs>=1.5.0,<2.0.0",
    "mkdocs-material>=9.1.0,<10.0.0",
    "mkdocstrings[python]>=0.22.0,<1.0.0",
    "mike>=1.1.2,<2.0.0"
]

[project.urls]
Homepage = "https://github.com/yourorg/financial-simulator"
Documentation = "https://financial-simulator.readthedocs.io"
Repository = "https://github.com/yourorg/financial-simulator.git"
Issues = "https://github.com/yourorg/financial-simulator/issues"
Changelog = "https://github.com/yourorg/financial-simulator/blob/main/CHANGELOG.md"

[project.scripts]
financial-simulator = "financial_simulator.cli:main"
fs-worker = "financial_simulator.worker:start_worker"
fs-scheduler = "financial_simulator.scheduler:start_scheduler"

[tool.setuptools]
packages = ["financial_simulator"]
include-package-data = true

[tool.setuptools.package-data]
financial_simulator = ["*.yaml", "*.json", "*.toml", "static/*", "templates/*"]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | \.venv
  | _build
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["financial_simulator"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
skip_glob = ["*/migrations/*", "*/venv/*"]
multi_line_output = 3

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=financial_simulator",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
    "--maxfail=1",
    "--tb=short",
    "--asyncio-mode=auto"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "smoke: marks tests as smoke tests",
    "regression: marks tests as regression tests"
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning"
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true
plugins = ["pydantic.mypy", "sqlalchemy.ext.mypy.plugin"]

[tool.pylint.messages_control]
max-line-length = 100
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "W0212",  # protected-access
    "W0613",  # unused-argument
]

[tool.pylint.similarities]
ignore-comments = true
ignore-docstrings = true
ignore-imports = true
min-similarity-lines = 10

[tool.coverage.run]
source = ["financial_simulator"]
branch = true
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__init__.py",
    "*/config.py",
    "*/settings.py"
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]

[tool.commitizen]
name = "cz_conventional_commits"
version = "1.0.0"
tag_format = "v$version"
version_files = [
    "pyproject.toml:version",
    "financial_simulator/__init__.py:__version__"
]
update_changelog_on_bump = true

[tool.poetry]
# If using Poetry instead of pip
name = "financial-simulator"
version = "1.0.0"
description = "A comprehensive financial analysis and portfolio simulation platform"
authors = ["Your Team <team@example.com>"]

[tool.ruff]
# Modern alternative to flake8
line-length = 100
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "S",   # flake8-bandit
    "SIM", # flake8-simplify
    "RUF", # Ruff-specific rules
]
ignore = ["E501", "B008", "S101"]
exclude = [".git", ".venv", "venv", "__pycache__", "migrations"]

[tool.pydocstyle]
convention = "numpy"
add-ignore = ["D100", "D104"]