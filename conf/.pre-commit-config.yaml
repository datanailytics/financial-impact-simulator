# Pre-commit hooks configuration for Financial Simulator project
# Install: pip install pre-commit
# Setup: pre-commit install
# Run manually: pre-commit run --all-files

default_language_version:
  python: python3.11

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-added-large-files
        args: ['--maxkb=5000']
      - id: check-ast
      - id: check-builtin-literals
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-executables-have-shebangs
      - id: check-json
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-toml
      - id: check-xml
      - id: check-yaml
        args: ['--unsafe']
      - id: debug-statements
      - id: detect-private-key
      - id: end-of-file-fixer
      - id: fix-byte-order-marker
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: name-tests-test
        args: ['--django']
      - id: requirements-txt-fixer
      - id: trailing-whitespace

  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 24.3.0
    hooks:
      - id: black
        language_version: python3.11
        args: ['--line-length=100', '--target-version=py311']

  # Python import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ['--profile=black', '--line-length=100']

  # Python linting
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: ['--max-line-length=100', '--extend-ignore=E203,W503']
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear
          - flake8-comprehensions
          - flake8-simplify
          - flake8-annotations

  # Advanced Python linting
  - repo: https://github.com/PyCQA/pylint
    rev: v3.1.0
    hooks:
      - id: pylint
        args: ['--max-line-length=100', '--disable=C0111,R0903']
        additional_dependencies:
          - pylint-django
          - pylint-flask

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.9.0
    hooks:
      - id: mypy
        args: ['--ignore-missing-imports', '--strict-optional', '--disallow-untyped-defs']
        additional_dependencies:
          - types-requests
          - types-PyYAML
          - types-python-dateutil
          - types-setuptools
          - types-toml

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.8
    hooks:
      - id: bandit
        args: ['-c', '.bandit', '-f', 'json', '-o', 'bandit-report.json']
        exclude: tests/

  # Dependency security scanning
  - repo: https://github.com/pyupio/safety
    rev: v3.1.0
    hooks:
      - id: safety
        args: ['check', '--json', '--output', 'safety-report.json']

  # Documentation
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: ['--convention=numpy']
        exclude: 'migrations/|tests/'

  # Markdown
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.39.0
    hooks:
      - id: markdownlint
        args: ['--fix']

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types_or: [yaml, json]
        exclude: 'package-lock.json'

  # Shell script analysis
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: ['--ignore', 'DL3008', '--ignore', 'DL3009']

  # Secrets detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: 'package-lock.json'

  # SQL formatting
  - repo: https://github.com/sqlfluff/sqlfluff
    rev: 3.0.6
    hooks:
      - id: sqlfluff-lint
        args: ['--dialect', 'postgres']
      - id: sqlfluff-fix
        args: ['--dialect', 'postgres']

  # Jupyter notebook cleaning
  - repo: https://github.com/kynan/nbstripout
    rev: 0.7.1
    hooks:
      - id: nbstripout

  # License headers
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.5
    hooks:
      - id: insert-license
        files: '\.py$'
        args:
          - --license-filepath
          - .license-header.txt
          - --comment-style
          - '#'

  # Python code quality
  - repo: https://github.com/PyCQA/autoflake
    rev: v2.3.1
    hooks:
      - id: autoflake
        args:
          - --in-place
          - --remove-all-unused-imports
          - --remove-unused-variables
          - --remove-duplicate-keys
          - --expand-star-imports

  # Commit message linting
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.20.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # Python docstring coverage
  - repo: https://github.com/econchick/interrogate
    rev: 1.5.0
    hooks:
      - id: interrogate
        args: [-v, --fail-under=80, --ignore-init-module, --ignore-init-method]

# Custom local hooks
  - repo: local
    hooks:
      - id: pytest-check
        name: pytest-check
        entry: pytest
        language: system
        pass_filenames: false
        always_run: false
        args: ['--tb=short', '-v']
        
      - id: requirements-check
        name: Check requirements files
        entry: python scripts/check_requirements.py
        language: system
        files: 'requirements.*\.txt$'
        
      - id: no-commit-to-branch
        name: Don't commit to main/master
        entry: bash -c 'if [[ $(git symbolic-ref HEAD) =~ main|master ]]; then exit 1; fi'
        language: system
        pass_filenames: false
        always_run: true

# Configuration for specific hooks
files: |
  (?x)^(
    .*\.py|
    .*\.yaml|
    .*\.yml|
    .*\.json|
    .*\.md|
    .*\.sh|
    .*\.sql|
    Dockerfile.*|
    .*requirements.*\.txt
  )$

exclude: |
  (?x)^(
    .*\.egg-info/|
    \.git/|
    \.mypy_cache/|
    \.pytest_cache/|
    \.tox/|
    __pycache__/|
    build/|
    dist/|
    docs/_build/|
    htmlcov/|
    node_modules/|
    venv/|
    \.env
  )$

fail_fast: false
minimum_pre_commit_version: '3.0.0'